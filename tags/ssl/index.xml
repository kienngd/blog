<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>SSL - Tag - K5D</title>
        <link>https://kienngd.98t1.net/tags/ssl/</link>
        <description>SSL - Tag - K5D</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor># (KienND)</managingEditor>
            <webMaster># (KienND)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 20 Dec 2021 15:49:05 &#43;0700</lastBuildDate><atom:link href="https://kienngd.98t1.net/tags/ssl/" rel="self" type="application/rss+xml" /><item>
    <title>How to create ssl certificate for local test environment</title>
    <link>https://kienngd.98t1.net/how_to_create_ssl_cert_for_local_test_en/</link>
    <pubDate>Mon, 20 Dec 2021 15:49:05 &#43;0700</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.98t1.net/how_to_create_ssl_cert_for_local_test_en/</guid>
    <description><![CDATA[<p>Hello, it is me again. Today I&rsquo;ll tell you how to create a ssl certificate for local test environment. I use Ubuntu 20.04 to test. Have fun!</p>
<p>In bash shell, run these commands:</p>
<h2 id="create-certificate-authority" class="headerLink">
    <a href="#create-certificate-authority" class="header-mark"></a>1 Create Certificate Authority</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">openssl genrsa -des3 -out rootCA.key <span class="m">2048</span>
</code></pre></td></tr></table>
</div>
</div><p>Input some information as required. Please notice to save <strong>pass phrase for rootCA.key</strong> in a safe place. You will use this many times later.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">openssl req -x509 -new -nodes -key rootCA.key -sha256 -days <span class="m">3650</span> -out rootCA.pem
</code></pre></td></tr></table>
</div>
</div><p>Change days as you want. 3650 days mean 10 years. :).</p>
<p>Now we will have two files: <strong>rootCA.key</strong> and <strong>rootCA.pem</strong>. Now you ara a certificate provider.</p>
<p>In your client PC, open browser (chrome, firefox&hellip;) and import file <strong>rootCA.pem</strong> to tell browser &ldquo;I am a valid certificate provider&rdquo; :).</p>]]></description>
</item></channel>
</rss>
