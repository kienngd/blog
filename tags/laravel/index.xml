<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Laravel on K5d</title>
    <link>https://kienngd.98t1.net/tags/laravel/</link>
    <description>Recent content in Laravel on K5d</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020 Copyright</copyright>
    <lastBuildDate>Thu, 25 Mar 2021 15:36:54 +0700</lastBuildDate><atom:link href="https://kienngd.98t1.net/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apiato select language</title>
      <link>https://kienngd.98t1.net/tutorials/apiato_select_language/</link>
      <pubDate>Thu, 25 Mar 2021 15:36:54 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/tutorials/apiato_select_language/</guid>
      <description>&lt;p&gt;Hello, today we will learn how to add select language to an ApiAto web app. Have fun!&lt;/p&gt;
&lt;p&gt;Document: &lt;a href=&#34;https://docs.apiato.io/features/localization/&#34;&gt;https://docs.apiato.io/features/localization/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Step 1&lt;/u&gt;: Add new language to supported language:&lt;/p&gt;
&lt;p&gt;Edit &lt;strong&gt;supported_languages&lt;/strong&gt; inside file &lt;strong&gt;app/Containers/Localization/Configs/localization.php&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel logout other devices</title>
      <link>https://kienngd.98t1.net/tutorials/laravel_logout_other_devices/</link>
      <pubDate>Fri, 27 Nov 2020 14:42:16 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/tutorials/laravel_logout_other_devices/</guid>
      <description>Check file: app/Http/Kernel.php (or file app/Ship/Kernels/HttpKernel.php if you use Apiato) and uncomment this line:
&amp;#39;web&amp;#39; =&amp;gt; [ // ...  \Illuminate\Session\Middleware\AuthenticateSession::class, // ... ], Logout all other devices:
use Illuminate\Support\Facades\Auth; ... Auth::logoutOtherDevices($password); </description>
    </item>
    
    <item>
      <title>Laravel Roles Permissions</title>
      <link>https://kienngd.98t1.net/tutorials/laravel_roles_permissions/</link>
      <pubDate>Fri, 27 Nov 2020 09:44:04 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/tutorials/laravel_roles_permissions/</guid>
      <description>Create role, permission
use Spatie\Permission\Models\Role; use Spatie\Permission\Models\Permission; $role = Role::create([&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;admin&amp;#39;]); $permission = Permission::create([&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;create-articles&amp;#39;]); Assign / Sync / Revoke permission to role
// Assign $role-&amp;gt;givePermissionTo($permission); // $permission can be string / object / array of strings / array of objects $permission-&amp;gt;assignRole($role); // Sync $role-&amp;gt;syncPermissions($permissions); $permission-&amp;gt;syncRoles($roles); // Revoke $role-&amp;gt;revokePermissionTo($permission); $permission-&amp;gt;removeRole($role); Check roles permissons
$role-&amp;gt;hasPermissionTo($permission); $role-&amp;gt;hasAnyPermission($permissions); $role-&amp;gt;hasAllPermissions($permissions); Authenticatable user with roles / permissions
The model:
use Illuminate\Foundation\Auth\User as Authenticatable; use Spatie\Permission\Traits\HasRoles; class User extends Authenticatable { use HasRoles; // .</description>
    </item>
    
    <item>
      <title>Apiato laravel based framework</title>
      <link>https://kienngd.98t1.net/tutorials/apiato/</link>
      <pubDate>Thu, 26 Nov 2020 08:36:20 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/tutorials/apiato/</guid>
      <description>Home page: http://docs.apiato.io/
Create project using composer from latest stable
composer create-project apiato/apiato apiato9 Then edit the .env file.
Migrate database
php artisan migrate Create admin user, some permissions, roles
php artisan db:seed Default account is: admin@admin.com / admin.
Add all current permissions to admin role.
php artisan apiato:permissions:toRole admin Install OAuth 2.0
php artisan passport:install Then edit file .env update CLIENT_WEB_ADMIN_ID, CLIENT_WEB_ADMIN_SECRET with the new created value.
Install ApiDocJs</description>
    </item>
    
    <item>
      <title>Use UUID as primary key of Laravel Eloquent ORM</title>
      <link>https://kienngd.98t1.net/howto/how_to_use_uuid_as_id_laravel/</link>
      <pubDate>Mon, 02 Nov 2020 15:37:11 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/howto/how_to_use_uuid_as_id_laravel/</guid>
      <description>Install package using composer:
composer require goldspecdigital/laravel-eloquent-uuid:^7.0 Inside migration file.
// Replace this $table-&amp;gt;increments(&amp;#39;id&amp;#39;); // By this $table-&amp;gt;uuid(&amp;#39;id&amp;#39;)-&amp;gt;primary(); Inside model file
use GoldSpecDigital\LaravelEloquentUUID\Database\Eloquent\Uuid; ... class MyModel extends Model { use Uuid; protected $keyType = &amp;#39;string&amp;#39;; public $incrementing = false; protected $guarded = []; } </description>
    </item>
    
  </channel>
</rss>
