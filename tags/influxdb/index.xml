<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>InfluxDB on K5d</title>
    <link>https://kienngd.98t1.net/tags/influxdb/</link>
    <description>Recent content in InfluxDB on K5d</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020 Copyright</copyright>
    <lastBuildDate>Tue, 20 Oct 2020 10:02:52 +0700</lastBuildDate><atom:link href="https://kienngd.98t1.net/tags/influxdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working With Influxdb Data Using PhpClient</title>
      <link>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_phpclient/</link>
      <pubDate>Tue, 20 Oct 2020 10:02:52 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_phpclient/</guid>
      <description>document: https://github.com/influxdata/influxdb-php
Install via composer composer require influxdb/influxdb-php Create client object $client = new InfluxDB\Client($host, $port); // directly get the database object $database = InfluxDB\Client::fromDSN(sprintf(&amp;#39;influxdb://user:pass@%s:%s/%s&amp;#39;, $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\Client::fromDSN(sprintf(&amp;#39;influxdb://user:pass@%s:%s/%s&amp;#39;, $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-&amp;gt;getClient(); Reading data // fetch the database $database = $client-&amp;gt;selectDB(&amp;#39;influx_test_db&amp;#39;); // executing a query will yield a resultset object $result = $database-&amp;gt;query(&amp;#39;select * from test_metric LIMIT 5&amp;#39;); // get the points from the resultset yields an array $points = $result-&amp;gt;getPoints(); Use the queryBuilder object // retrieve points with the query builder $result = $database-&amp;gt;getQueryBuilder() -&amp;gt;select(&amp;#39;cpucount&amp;#39;) -&amp;gt;from(&amp;#39;test_metric&amp;#39;) -&amp;gt;limit(2) -&amp;gt;offset(2) -&amp;gt;getResultSet() -&amp;gt;getPoints(); // get the query from the QueryBuilder $query = $database-&amp;gt;getQueryBuilder() -&amp;gt;select(&amp;#39;cpucount&amp;#39;) -&amp;gt;from(&amp;#39;test_metric&amp;#39;) -&amp;gt;where([&amp;#34;region = &amp;#39;us-west&amp;#39;&amp;#34;]) -&amp;gt;getQuery(); Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-&amp;gt;getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; Writting data // create an array of points $points = array( new Point( &amp;#39;Measurement_Name&amp;#39;, // name of the measurement 	0.</description>
    </item>
    
    <item>
      <title>Working_with_influxdb_data_using_api</title>
      <link>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_api/</link>
      <pubDate>Tue, 20 Oct 2020 10:02:45 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_api/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Working_with_influxdb_data_using_influx</title>
      <link>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_influx/</link>
      <pubDate>Tue, 20 Oct 2020 10:02:33 +0700</pubDate>
      
      <guid>https://kienngd.98t1.net/notes/working_with_influxdb_data_using_influx/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
