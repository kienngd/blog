[{"categories":["Tutorials"],"content":"Add new guard to an Apiato11 project","date":"2022-12-14","objectID":"/apiato11_add_new_guard/","series":[],"tags":["Apiato","Laravel","PHP"],"title":"Add new guard to an Apiato11 project","uri":"/apiato11_add_new_guard/"},{"categories":["Tutorials"],"content":"1 Edit config config/auth.php section guards and providers // ... 'guards' =\u003e [ // ... 'web_custom_guard' =\u003e [ 'driver' =\u003e 'session', 'provider' =\u003e 'custom_guard', ], // ... ] // ... 'providers' =\u003e [ // ... 'custom_guard' =\u003e [ 'driver' =\u003e 'eloquent', 'model' =\u003e 'CUSTOM_CLASS', ], // ... ] // ... ","date":"2022-12-14","objectID":"/apiato11_add_new_guard/:1:0","series":[],"tags":["Apiato","Laravel","PHP"],"title":"Add new guard to an Apiato11 project","uri":"/apiato11_add_new_guard/#edit-config"},{"categories":["Tutorials"],"content":"2 Task LoginTask //... Auth::guard('web_custom_guard')-\u003eattempt(...) //... LogoutTask //... Auth::guard('web_custom_guard')-\u003elogout(); //... ","date":"2022-12-14","objectID":"/apiato11_add_new_guard/:2:0","series":[],"tags":["Apiato","Laravel","PHP"],"title":"Add new guard to an Apiato11 project","uri":"/apiato11_add_new_guard/#task"},{"categories":["Tutorials"],"content":"3 Handle UnAuthenticationException app/Ship/Exceptions/Handlers/ExceptionsHandler.php //... protected function unauthenticated($request, LaravelAuthenticationException $e): JsonResponse|Response { if($this-\u003eshouldReturnJson($request, $e)) { return($this-\u003ebuildResponse(new CoreAuthenticationException())); } return(redirect()-\u003eguest(route(RouteServiceProvider::getLoginRouteNameFromGuard($e-\u003eguards())))); } ","date":"2022-12-14","objectID":"/apiato11_add_new_guard/:3:0","series":[],"tags":["Apiato","Laravel","PHP"],"title":"Add new guard to an Apiato11 project","uri":"/apiato11_add_new_guard/#handle-unauthenticationexception"},{"categories":["Tutorials"],"content":"4 Get-login-route-name from guard app/Ship/Providers/RouteServiceProvider.php //.... /** getLoginRouteNameFromGuard */ public static function getLoginRouteNameFromGuard($guardName) { if(is_array($guardName)) { $guardName = $guardName[0] ?? null; } if(!is_string($guardName) || empty($guardName)) { return(self::LOGIN); } switch($guardName) { case 'web_custom_guard': return(self::WEB_CUSTOM_LOGIN); default: return(self::LOGIN); } } ","date":"2022-12-14","objectID":"/apiato11_add_new_guard/:4:0","series":[],"tags":["Apiato","Laravel","PHP"],"title":"Add new guard to an Apiato11 project","uri":"/apiato11_add_new_guard/#get-login-route-name-from-guard"},{"categories":["Tutorials"],"content":"Working with HexaDog Laravel-Themes-Manager","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/"},{"categories":["Tutorials"],"content":"1 What is Laravel-Themes-MagagerLink github: https://github.com/hexadog/laravel-themes-manager ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:1:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#what-is-laravel-themes-magager"},{"categories":["Tutorials"],"content":"2 Install composer require hexadog/laravel-themes-manager # Publish the configuration file php artisan vendor:publish --provider=\"Hexadog\\ThemesManager\\Providers\\PackageServiceProvider\" --tag=config # Publish the view files php artisan vendor:publish --provider=\"Hexadog\\ThemesManager\\Providers\\PackageServiceProvider\" --tag=views ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:2:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#install"},{"categories":["Tutorials"],"content":"3 Create theme php artisan theme:make By default view is in folder: themes/VENDOR-NAME/THEME-NAME/resources/views/VIEW-NAME.blade.php ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:3:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#create-theme"},{"categories":["Tutorials"],"content":"4 Set theme You can set theme manually in controller // ... use Hexadog\\ThemesManager\\Facades\\ThemesManager; // .... ThemesManager::set('VENDOR-NAME/THEME-NAME'); Or via middleware app/Ship/Middlewares/SetTheme.php \u003c?php namespace App\\Ship\\Middlewares; use Closure; use Hexadog\\ThemesManager\\Http\\Middleware\\ThemeLoader as HexadogThemeLoader; class SetTheme extends HexadogThemeLoader { public function handle($request, Closure $next, $theme = null) { $theme = 'kiennd/default'; // Call parent Middleware handle method return parent::handle($request, $next, $theme); } } Kernel app/Ship/Kernels/HttpKernel.php use App\\Ship\\Middlewares\\SetTheme; // ... protected $middleware = [ //... SetTheme::class, ]; // ... ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:4:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#set-theme"},{"categories":["Tutorials"],"content":"5 AssetsEach theme have its assets (images, stylesheets, javascript, …) inside its folder. When active theme, this folder is linked (use symbolic link) into public/themes folder so you can access it publicly themes/VENDOR-NAME/THEME-NAME/public/ {!! Theme::asset('css/app.min.css') !!} {!! theme_asset('css/app.min.css') !!} # https://URL/themes/VENDOR-NAME/THEME-NAME/css/app.min.css {!! Theme::style('css/app.min.css') !!} {!! theme_style('css/app.min.css') !!} # \u003clink href=\"https://URL/themes/VENDOR-NAME/THEME-NAME/css/app.min.css\"\u003e {!! Theme::script('js/app.min.js') !!} {!! theme_script('js/app.min.js') !!} # \u003cscript src=\"https://URL/themes/VENDOR-NAME/THEME-NAME/js/app.min.js\"\u003e\u003c/script\u003e {!! Theme::image('img/logo.png', 'My Theme logo') !!} {!! theme_image('img/logo.png', 'My Theme logo') !!} # \u003cimg src=\"https://URL/themes/VENDOR-NAME/THEME-NAME/img/logo.png\" alt=\"My Theme logo\" /\u003e ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:5:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#assets"},{"categories":["Tutorials"],"content":"6 Overwrite error-viewsthemes/VENDOR-NAME/THEME-NAME/resources/views/errors ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:6:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#overwrite-error-views"},{"categories":["Tutorials"],"content":"7 Overwrite package-viewsthemes/VENDOR-NAME/THEME-NAME/resources/views/vendor/PACKAGE-NAME ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:7:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#overwrite-package-views"},{"categories":["Tutorials"],"content":"8 Language filesthemes/VENDOR-NAME/THEME-NAME/lang/en/ and use translate under namespace theme. Example: __('theme::string.hello'). ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:8:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#language-files"},{"categories":["Tutorials"],"content":"9 Composed components Page title, theme asset, theme image, theme script, theme style \u003cx-theme-page-title title=\"Home\" /\u003e \u003c!-- \u003ctitle\u003eHome - AppName\u003c/title\u003e --\u003e \u003cx-theme-page-title title=\"Home\" withAppName=false \u003e \u003c!-- \u003ctitle\u003eHome\u003c/title\u003e --\u003e \u003cx-theme-page-title title=\"Home\" separator=\"|\" /\u003e \u003c!-- \u003ctitle\u003eHome | AppName\u003c/title\u003e --\u003e \u003cx-theme-page-title title=\"Home\" invert=true \u003e \u003c!-- \u003ctitle\u003eAppName - Home\u003c/title\u003e --\u003e \u003cx-theme-asset source=\"css/app.css\"/\u003e \u003c!-- https://URL/themes/VENDOR-NAME/THEME-NAME/css/app.css --\u003e \u003cx-theme-image source=\"img/logo.png\"/\u003e \u003c!-- \u003cimg src=\"https://URL/themes/VENDOR-NAME/THEME-NAME/img/logo.png\" /\u003e --\u003e \u003cx-theme-image source=\"img/logo.png\" class=\"image\" alt=\"Logo\" /\u003e \u003c!-- \u003cimg src=\"themes/VENDOR-NAME/THEME-NAME/img/logo.png\" class=\"image\" alt=\"logo\" /\u003e --\u003e \u003cx-theme-style source=\"css/app.css\"/\u003e \u003c!-- \u003clink src=\"https://URL/themes/VENDOR-NAME/THEME-NAME/css/app.css\" rel=\"stylehseet\"\u003e --\u003e \u003cx-theme-style source=\"css/app.css\" media=\"print\"/\u003e \u003c!-- \u003clink src=\"https://URL/themes/VENDOR-NAME/THEME-NAME/css/app.css\" rel=\"stylehseet\" media=\"print\"\u003e --\u003e ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:9:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#composed-components"},{"categories":["Tutorials"],"content":"10 Configurations Themes directory: themes-manager.diretory default is themes Public assets: themes-manager.symlink_path default is public Fallback theme: themes-manager.fallback_theme Cache: themes-manager.cache.enabled, themes-manager.cache.lifetime, themes-manager.cache.key ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:10:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#configurations"},{"categories":["Tutorials"],"content":"11 Artisan commands php artisan theme:make php artisan theme:list php artisan theme:activate hexadog/default php artisan theme:deactivate hexadog/default php artisan theme:cache php artisan theme:cache:clear ","date":"2022-12-12","objectID":"/working_with_hexadog_laravel_themes_manager/:11:0","series":[],"tags":["Laravel","Laravel-Themes-Magager"],"title":"Working with HexaDog Laravel-Themes-Manager","uri":"/working_with_hexadog_laravel_themes_manager/#artisan-commands"},{"categories":["Howto"],"content":"How to connect to a service on the remote server via SSH tunnel","date":"2021-03-30","objectID":"/how_to_connect_service_via_ssh_tunnel/","series":[],"tags":["Linux","SSH"],"title":"How to connect to a service on the remote server via SSH tunnel","uri":"/how_to_connect_service_via_ssh_tunnel/"},{"categories":["Howto"],"content":"Hello, today we will talk about connecting to a remote service via SSH tunnel. I use Ubuntu 20.04 to test. Have fun! Imagine that you have a MySQL server listen on port 3306. For security reasons, your firewall denies port 3306 from the internet. And you have a SSH account to connect to your server. Normally you can SSH to the server then use mysql client console to interact with the database. But sometimes you want to connect to a database using a third party application (Example navicat or DBeaver…). In these cases you can create a SSH tunnel then connect via tunnel. Option 1: Command line Create tunnel ssh -p[SERVER_SSH_PORT] -L [LOCAL_PORT_TO_LISTEN]:[LOCAL_ADDRESS_TO_LISTEN]:[SERVER_PORT_TO_FORWARD] [SERVER_USER_NAME]@[SERVER_IP] Example: ssh -p22 -L 3307:127.0.0.1:3306 test@192.168.11.204 Then you can connect to database mysql -P3307 -uroot -p -h127.0.0.1 Option 2: Use DBeaver When you create or edit a connection, you can create a tunnel Create tunnel Create connection Thank you for reading. Further information from ssh manual: man ssh ","date":"2021-03-30","objectID":"/how_to_connect_service_via_ssh_tunnel/:0:0","series":[],"tags":["Linux","SSH"],"title":"How to connect to a service on the remote server via SSH tunnel","uri":"/how_to_connect_service_via_ssh_tunnel/#"},{"categories":["notes"],"content":"Naming: Every Developer's Nightmare","date":"2023-04-24","objectID":"/202304241000_naming/","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/"},{"categories":["notes"],"content":"consider using the following pattern and ask yourself the corresponding questions: [scope][typePrefix][baseName][qualifier][typeSuffix]. ","date":"2023-04-24","objectID":"/202304241000_naming/:0:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#"},{"categories":["notes"],"content":"1 Scope: What is the visibility or accessibility of this variable? (e.g., private, public, protected, internal, package-private) Is this variable specific to any programming language features or conventions? (e.g., double underscore prefix in Python, dollar sign in jQuery, ‘@’ for instance variables in Ruby) Is this variable part of a framework or library that requires a specific naming pattern? (e.g., Angular’s ‘ng’ prefix for directives, React’s ‘use’ prefix for hooks) ","date":"2023-04-24","objectID":"/202304241000_naming/:1:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#scope"},{"categories":["notes"],"content":"2 TypePrefix Is this variable a boolean or a function that returns a boolean? (e.g., is, has, contains, are, integrates) Does the variable represent a state, condition, or action that can be described with words like “is,” “has,” “contains,” or “integrates”? (e.g., isEnabled, hasAccess, containsItem) Is this a function responsible for getting, setting, fetching, or updating data? (e.g., get, set, fetch, update, retrieve, store, save) ","date":"2023-04-24","objectID":"/202304241000_naming/:2:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#typeprefix"},{"categories":["notes"],"content":"3 BaseName: What is the primary purpose of this variable? (e.g., user, distance, payment, errorMessage) Can I describe the variable’s role in the code with a clear, concise word or phrase? (e.g., registrationStatus, totalPrice, elapsedTime) ","date":"2023-04-24","objectID":"/202304241000_naming/:3:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#basename"},{"categories":["notes"],"content":"4 Qualifier: Are there any additional details or context that would help distinguish this variable from others with a similar purpose? (e.g., firstName, lastName, phoneNumber) Does the variable have specific units or properties that should be included in the name, such as “InMeters” or “InSeconds”? (e.g., distanceInMiles, timeInSeconds) Is there a specific state or condition that this variable represents, such as “Valid” or “Removable”? (e.g., isValidEmail, isRemovableItem) ","date":"2023-04-24","objectID":"/202304241000_naming/:4:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#qualifier"},{"categories":["notes"],"content":"5 TypeSuffix: What is the fundamental purpose or structure of this variable? (e.g., Count, Index, Sum, Average, List, Map, Array, Set, Queue) Can the variable’s role be clarified by adding a suffix for the structure like “Count,” “Index,” “Sum,” “Average,” “List,” or “Map”? (e.g., itemCount, currentIndex, totalPriceSum, ratingAverage, userList, settingsMap) ","date":"2023-04-24","objectID":"/202304241000_naming/:5:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#typesuffix"},{"categories":["notes"],"content":"6 Examples:fetchProductById: scope: “” (Public methods dont have a specific prefix in most languages) typePrefix: fetch (function) baseName: Product qualifier: ById updateEmailPreference: scope: \"\" (public) typePrefix: update (function) baseName: Email qualifier: Preference getUserByEmail: typePrefix: get (function) baseName: User qualifier: ByEmail getUserLoggedIn getLoggedInUser (swap the base name and qualifier in order to give the variable a more appropriate and meaningful name) typePrefix: get (function) qualifier: LoggedIn baseName: User ","date":"2023-04-24","objectID":"/202304241000_naming/:6:0","series":[],"tags":["Books","CleanCode"],"title":"Naming: Every Developer's Nightmare","uri":"/202304241000_naming/#examples"},{"categories":["notes"],"content":"Strategy-pattern in PHP with examples","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/"},{"categories":["notes"],"content":"1 Example 1: SortWe need to implement a sorting system that sorts an array of numbers in ascending or descending order ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:1:0","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#example-1-sort"},{"categories":["notes"],"content":"1.1 Without pattern class Sorter { public function bubbleSort(array $arr) { // Implementation of Bubble Sort } public function quickSort(array $arr) { // Implementation of Quick Sort } public function mergeSort(array $arr) { // Implementation of Merge Sort } } $sorter = new Sorter(); $sortedArr = $sorter-\u003ebubbleSort($arr); // or $sorter-\u003equickSort($arr) or $sorter-\u003emergeSort($arr) ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:1:1","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#without-pattern"},{"categories":["notes"],"content":"1.2 With pattern interface SortingStrategy { public function sort(array $arr): array; } class BubbleSort implements SortingStrategy { public function sort(array $arr): array { // Implementation of Bubble Sort } } class QuickSort implements SortingStrategy { public function sort(array $arr): array { // Implementation of Quick Sort } } class MergeSort implements SortingStrategy { public function sort(array $arr): array { // Implementation of Merge Sort } } class Sorter { private $sortingStrategy; public function __construct(SortingStrategy $sortingStrategy) { $this-\u003esortingStrategy = $sortingStrategy; } public function sort(array $arr): array { return $this-\u003esortingStrategy-\u003esort($arr); } } $sorter = new Sorter(new BubbleSort()); $sortedArr = $sorter-\u003esort($arr); // or new Sorter(new QuickSort())-\u003esort($arr) or new Sorter(new MergeSort())-\u003esort($arr) ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:1:2","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#with-pattern"},{"categories":["notes"],"content":"2 Example 2: Discount ProductWe want to implement the discount system ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:2:0","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#example-2-discount-product"},{"categories":["notes"],"content":"2.1 Without pattern class DiscountCalculator { public function calculateDiscount(Product $product) { if ($product instanceof Book) { return $product-\u003egetPrice() * 0.1; } elseif ($product instanceof Clothing) { return $product-\u003egetPrice() * 0.2; } elseif ($product instanceof Electronics) { return $product-\u003egetPrice() * 0.3; } } } $discountCalculator = new DiscountCalculator(); $discountedPrice = $product-\u003egetPrice() - $discountCalculator-\u003ecalculateDiscount($product); ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:2:1","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#without-pattern-1"},{"categories":["notes"],"content":"2.2 With pattern interface DiscountStrategy { public function calculateDiscount(Product $product): float; } class BookDiscount implements DiscountStrategy { public function calculateDiscount(Product $product): float { return $product-\u003egetPrice() * 0.1; } } class ClothingDiscount implements DiscountStrategy { public function calculateDiscount(Product $product): float { return $product-\u003egetPrice() * 0.2; } } class ElectronicsDiscount implements DiscountStrategy { public function calculateDiscount(Product $product): float { return $product-\u003egetPrice() * 0.3; } } class DiscountCalculator { private $discountStrategy; public function __construct(DiscountStrategy $discountStrategy) { $this-\u003ediscountStrategy = $discountStrategy; } public function calculateDiscount(Product $product): float { return $this-\u003ediscountStrategy-\u003ecalculateDiscount($product); } } $discountCalculator = new DiscountCalculator(new BookDiscount()); $discountedPrice = $product-\u003egetPrice() - $discountCalculator-\u003ecalculateDiscount($product); ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:2:2","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#with-pattern-1"},{"categories":["notes"],"content":"3 Best Practices for Implementing Strategy Pattern in PHP: Keep the Strategy interface simple and focused on the algorithm’s behavior. Use meaningful names for the Concrete Strategies to make the code more readable and maintainable. Use dependency injection to provide the Concrete Strategies to the Context class. Avoid coupling the Concrete Strategies to the Context class to make the code more flexible and reusable. ","date":"2023-04-21","objectID":"/202304211000_strategy_pattern/:3:0","series":[],"tags":["Design-Pattern","PHP"],"title":"Strategy Pattern in PHP with examples","uri":"/202304211000_strategy_pattern/#best-practices-for-implementing-strategy-pattern-in-php"},{"categories":["notes"],"content":"This article shows the basic Markdown syntax and format.","date":"2022-11-03","objectID":"/202211030810_markdown_basic/","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/"},{"categories":["notes"],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files. Note This article is a shameful copy of the great Grav original page. If you want to know about the extented Markdown syntax of DoIt theme, please read extended Markdown syntax page. Let’s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages. Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it. Some of the key benefits are: Markdown is simple to learn, with minimal extra characters, so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this: The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. – John Gruber Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like! Tip  Bookmark this page for easy future reference! ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:0:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#"},{"categories":["notes"],"content":"1 HeadingsHeadings from h2 through h6 are constructed with a # for each level: ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading The HTML looks like this: \u003ch2\u003eh2 Heading\u003c/h2\u003e \u003ch3\u003eh3 Heading\u003c/h3\u003e \u003ch4\u003eh4 Heading\u003c/h4\u003e \u003ch5\u003eh5 Heading\u003c/h5\u003e \u003ch6\u003eh6 Heading\u003c/h6\u003e Heading IDs To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading: ### A Great Heading {#custom-id} The HTML looks like this: \u003ch3 id=\"custom-id\"\u003eA Great Heading\u003c/h3\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:1:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#headings"},{"categories":["notes"],"content":"2 CommentsComments should be HTML compatible. \u003c!-- This is a comment --\u003e Comment below should NOT be seen: ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:2:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#comments"},{"categories":["notes"],"content":"3 Horizontal RulesThe HTML \u003chr\u003e element is for creating a “thematic break” between paragraph-level elements. In Markdown, you can create a \u003chr\u003e with any of the following: ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks The rendered output looks like this: ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:3:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#horizontal-rules"},{"categories":["notes"],"content":"4 Body CopyBody copy written as normal, plain text will be wrapped with \u003cp\u003e\u003c/p\u003e tags in the rendered HTML. So this body copy: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. The HTML looks like this: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e A line break can be done with one blank line. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:4:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#body-copy"},{"categories":["notes"],"content":"5 Inline HTMLIf you need a certain HTML tag (with a class) you can simply use HTML: Paragraph in Markdown. \u003cdiv class=\"class\"\u003e This is \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Paragraph in Markdown. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:5:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#inline-html"},{"categories":["notes"],"content":"6 Emphasis","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:6:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#emphasis"},{"categories":["notes"],"content":"6.1 BoldFor emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text. **rendered as bold text** __rendered as bold text__ The HTML looks like this: \u003cstrong\u003erendered as bold text\u003c/strong\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:6:1","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#bold"},{"categories":["notes"],"content":"6.2 ItalicsFor emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text. *rendered as italicized text* _rendered as italicized text_ The HTML looks like this: \u003cem\u003erendered as italicized text\u003c/em\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:6:2","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#italics"},{"categories":["notes"],"content":"6.3 StrikethroughIn GFMGitHub flavored Markdown you can do strikethroughs. ~~Strike through this text.~~ The rendered output looks like this: Strike through this text. The HTML looks like this: \u003cdel\u003eStrike through this text.\u003c/del\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:6:3","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#strikethrough"},{"categories":["notes"],"content":"6.4 CombinationBold, italics, and strikethrough can be used in combination. ***bold and italics*** ~~**strikethrough and bold**~~ ~~*strikethrough and italics*~~ ~~***bold, italics and strikethrough***~~ The rendered output looks like this: bold and italics strikethrough and bold strikethrough and italics bold, italics and strikethrough The HTML looks like this: \u003cem\u003e\u003cstrong\u003ebold and italics\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003estrikethrough and bold\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003estrikethrough and italics\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003ebold, italics and strikethrough\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:6:4","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#combination"},{"categories":["notes"],"content":"7 BlockquotesFor quoting blocks of content from another source within your document. Add \u003e before any text you want to quote: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The rendered output looks like this: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The HTML looks like this: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e Blockquotes can also be nested: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. The rendered output looks like this: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:7:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#blockquotes"},{"categories":["notes"],"content":"8 Lists","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:8:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#lists"},{"categories":["notes"],"content":"8.1 UnorderedA list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: * valid bullet - valid bullet + valid bullet For example: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:8:1","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#unordered"},{"categories":["notes"],"content":"8.2 OrderedA list of items in which the order of items does explicitly matter. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip If you just use 1. for each number, Markdown will automatically number each item. For example: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:8:2","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#ordered"},{"categories":["notes"],"content":"8.3 Task ListsTask lists allow you to create a list of items with checkboxes. To create a task list, add dashes (-) and brackets with a space ([ ]) before task list items. To select a checkbox, add an x in between the brackets ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media The rendered output looks like this: Write the press release Update the website Contact the media ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:8:3","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#task-lists"},{"categories":["notes"],"content":"9 Code","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:9:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#code"},{"categories":["notes"],"content":"9.1 Inline CodeWrap inline snippets of code with `. In this example, `\u003csection\u003e\u003c/section\u003e` should be wrapped as **code**. The rendered output looks like this: In this example, \u003csection\u003e\u003c/section\u003e should be wrapped as code. The HTML looks like this: \u003cp\u003e In this example, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e should be wrapped with \u003cstrong\u003ecode\u003c/strong\u003e. \u003c/p\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:9:1","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#inline-code"},{"categories":["notes"],"content":"9.2 Indented CodeOr indent several lines of code by at least four spaces, as in: // Some comments line 1 of code line 2 of code line 3 of code The rendered output looks like this: // Some comments line 1 of code line 2 of code line 3 of code The HTML looks like this: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:9:2","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#indented-code"},{"categories":["notes"],"content":"9.3 Block Fenced CodeUse “fences” ``` to block in multiple lines of code with a language attribute. ```markdown Sample text here... ``` The HTML looks like this: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:9:3","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#block-fenced-code"},{"categories":["notes"],"content":"9.4 Syntax HighlightingGFMGitHub Flavored Markdown also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code “fence”, ```js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` The rendered output looks like this: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Note Syntax highlighting page in Hugo Docs introduces more about syntax highlighting, including highlight shortcode. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:9:4","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#syntax-highlighting"},{"categories":["notes"],"content":"10 TablesTables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. The HTML looks like this: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e Right or center aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column. Adding colons on both sides of the dashes below any heading will center align text for that column. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:10:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#tables"},{"categories":["notes"],"content":"11 Links","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:11:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#links"},{"categories":["notes"],"content":"11.1 Basic Link \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) The rendered output looks like this (hover over the link, there is no tooltip): https://assemble.io contact@revolunet.com Assemble The HTML looks like this: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:11:1","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#basic-link"},{"categories":["notes"],"content":"11.2 Add a Title [Upstage](https://github.com/upstage/ \"Visit Upstage!\") The rendered output looks like this (hover over the link, there should be a tooltip): Upstage The HTML looks like this: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:11:2","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#add-a-title"},{"categories":["notes"],"content":"11.3 Named AnchorsNamed anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note The specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:11:3","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#named-anchors"},{"categories":["notes"],"content":"12 FootnotesFootnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ([^1]). Identifiers can be numbers or words, but they can’t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.). You don’t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. This is a digital footnote[^1]. This is a footnote with \"label\"[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \"label\" This is a digital footnote1. This is a footnote with “label”2 ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:12:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#footnotes"},{"categories":["notes"],"content":"13 ImagesLocal images in assets folder ![Local image](/static/images/basic-markdown-featured-image.webp) Images have a similar syntax to links but include a preceding exclamation point. ![Minion](https://octodex.github.com/images/minion.png) or: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat Like links, images also have a footnote style syntax: ![Alt text][id] The DojocatAlt text \" The Dojocat With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Tip DoIt theme has special shortcode for image, which provides more features. This is a digital footnote ↩︎ This is a footnote with “label” ↩︎ ","date":"2022-11-03","objectID":"/202211030810_markdown_basic/:13:0","series":[],"tags":["Markdown","HTML"],"title":"Basic Markdown Syntax","uri":"/202211030810_markdown_basic/#images"},{"categories":["notes"],"content":"Some softwares I use","date":"2022-11-03","objectID":"/some_softwares_i_use/","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/"},{"categories":["notes"],"content":"Some softwares I use ","date":"2022-11-03","objectID":"/some_softwares_i_use/:0:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#"},{"categories":["notes"],"content":"1 OS Ubuntu 22.04 Microsoft Windows 7 \u0026 10 (seldom) ","date":"2022-11-03","objectID":"/some_softwares_i_use/:1:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#os"},{"categories":["notes"],"content":"2 Web browser Google chrome Extendsion: Google translate Google docs offline Firefox Opera ","date":"2022-11-03","objectID":"/some_softwares_i_use/:2:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#web-browser"},{"categories":["notes"],"content":"3 IDEs VS Code Code-Server - Browser based VS Code IDE ","date":"2022-11-03","objectID":"/some_softwares_i_use/:3:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#ides"},{"categories":["notes"],"content":"4 Database clients DBeaver MySQL client console PSQL console ","date":"2022-11-03","objectID":"/some_softwares_i_use/:4:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#database-clients"},{"categories":["notes"],"content":"5 Chat clients Telegram Zalo Skype ","date":"2022-11-03","objectID":"/some_softwares_i_use/:5:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#chat-clients"},{"categories":["notes"],"content":"6 Online services Google suite: https://gmail.com DrawIO Dropbox Project management Trello - Jira: https://www.atlassian.com/ Mindmap: https://gitmind.com/ ","date":"2022-11-03","objectID":"/some_softwares_i_use/:6:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#online-services"},{"categories":["notes"],"content":"7 Others Laradock Nginx PHP 7, 8 MySQL PostgreSQL 12 TimeScaleDB 2.7 Keepass - Offline passwords management LibreOffice Text editor: Geany, Gedit Image processor: GIMP Thunderbird - Email client OpenVPN FreePlane - mindmap editor DrawIO Postman ","date":"2022-11-03","objectID":"/some_softwares_i_use/:7:0","series":null,"tags":["softwares"],"title":"Some softwares I use everyday","uri":"/some_softwares_i_use/#others"},{"categories":["howto"],"content":"Hello, it is me again. Today I’ll tell you how I manage my tasks. When I take a task, first of all I’ll set it one (or more) tags. Then I set it a due date. And finally put it in to a list. Very simple :). But remember that not urgent task will be urgent task very soon. And important, urgent tasks will make you exhausted very soon too. So take care your not urgent task carefully before it to be urgent. ","date":"2022-09-29","objectID":"/how_to_manage_your_tasks_list/:0:0","series":null,"tags":["Personal","Time Managerment"],"title":"How to manage your tasks list?","uri":"/how_to_manage_your_tasks_list/#"},{"categories":["howto"],"content":"Hello, it is me again. Today I’ll tell you how to create a ssl certificate for local test environment. I use Ubuntu 20.04 to test. Have fun! In bash shell, run these commands: ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:0:0","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#"},{"categories":["howto"],"content":"1 Create Certificate Authority openssl genrsa -des3 -out rootCA.key 2048 Input some information as required. Please notice to save pass phrase for rootCA.key in a safe place. You will use this many times later. openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 3650 -out rootCA.pem Change days as you want. 3650 days mean 10 years. :). Now we will have two files: rootCA.key and rootCA.pem. Now you ara a certificate provider. In your client PC, open browser (chrome, firefox…) and import file rootCA.pem to tell browser “I am a valid certificate provider” :). ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:1:0","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#create-certificate-authority"},{"categories":["howto"],"content":"2 Generate rsa for domain","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:2:0","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#generate-rsa-for-domain"},{"categories":["howto"],"content":"2.1 Create private key openssl genrsa -out YOUR_DOMAIN_NAME.key 2048 ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:2:1","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#create-private-key"},{"categories":["howto"],"content":"2.2 Create csr openssl req -new -key YOUR_DOMAIN_NAME.key -out YOUR_DOMAIN_NAME.csr ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:2:2","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#create-csr"},{"categories":["howto"],"content":"2.3 Create file SAN file vi YOUR_DOMAIN_NAME.ext Content: authorityKeyIdentifier=keyid,issuer basicConstraints=CA:FALSE keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment subjectAltName = @alt_names [alt_names] DNS.1 = \u003cYOUR DOMAIN 2 HERE\u003e DNS.2 = \u003cYOUR DOMAIN 2 HERE\u003e Please notice that you can add as much DNS.x as you want. ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:2:3","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#create-file-san-file"},{"categories":["howto"],"content":"3 Create domain certificate openssl x509 -req -in YOUR_DOMAIN_NAME.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out YOUR_DOMAIN_NAME.crt -days 3650 -sha256 -extfile YOUR_DOMAIN_NAME.ext Change the days as you want. 3650 days mean about 10 years. Now you have crt, csr, key files for domain. Copy these files to web server (example nginx) and config. ","date":"2021-12-20","objectID":"/how_to_create_ssl_cert_for_local_test_en/:3:0","series":null,"tags":["SSL"],"title":"How to create ssl certificate for local test environment","uri":"/how_to_create_ssl_cert_for_local_test_en/#create-domain-certificate"},{"categories":["notes"],"content":"Hello, it is me again. Today, we will talk about Code-Server an “in browser vs code IDE”. I use Ubuntu 20.04 to test. Have fun! Download Code-Server from github page: https://github.com/cdr/code-server/releases/ You can download rpm or deb file or tar.gz file :). If you download rpm or deb, use PMS of your OS to install it. I download file tar.gz so I just untar it to an folder. Run server Go to code-server folder and run command to show all options ./code-server --help Run command and show output in console ./code-server --auth=password Default config file is: ~/.config/code-server/config.yaml Open your browser, try access: http://localhost:2704 (please change to your port) and enjoy. You can create service to manage: how to create linux service Happy Coding. ","date":"2021-06-08","objectID":"/code_server_code_in_your_browser/:0:0","series":null,"tags":["SYSTEM","IDE","Code-Server"],"title":"Code-Server code in your browser","uri":"/code_server_code_in_your_browser/#"},{"categories":["howto"],"content":"Hello, it is me again. I use laradock to host all my test projects. And today I want some projects to use PHP 7.4 and some projects will use 8.0. I use Ubuntu 20.04 to test. Have fun. First of all please remember that it is very important to backup your configuration file: docker-compose.yml. Now, edit your files: docker-compose.yml and .env .env … #PHP 8 version PHP8_VERSION=8.0 … #Define some new ports to difference from original workspace WORKSPACE_PHP8_SSH_PORT=2223 WORKSPACE_PHP8_BROWSERSYNC_HOST_PORT=4000 WORKSPACE_PHP8_BROWSERSYNC_UI_HOST_PORT=4001 WORKSPACE_PHP8_VUE_CLI_SERVE_HOST_PORT=9080 WORKSPACE_PHP8_VUE_CLI_UI_HOST_PORT=9001 WORKSPACE_PHP8_ANGULAR_CLI_SERVE_HOST_PORT=5200 docker-compose.yml Copy workspace entry and rename to workspace-php-8 Inside workspace-php-8 entry: #PHP8 version - LARADOCK_PHP_VERSION=${PHP8_VERSION} … #Does not work with PHP8 - INSTALL_XDEBUG=false … #Does not work with PHP8 - INSTALL_IMAGEMAGICK=false … #Does not work with PHP8 - INSTALL_AST=false … #Change some ports to difference from php_workspace ports: - \"${WORKSPACE_PHP8_SSH_PORT}:22\" - \"${WORKSPACE_PHP8_BROWSERSYNC_HOST_PORT}:3000\" - \"${WORKSPACE_PHP8_BROWSERSYNC_UI_HOST_PORT}:3001\" - \"${WORKSPACE_PHP8_VUE_CLI_SERVE_HOST_PORT}:8080\" - \"${WORKSPACE_PHP8_VUE_CLI_UI_HOST_PORT}:8000\" - \"${WORKSPACE_PHP8_ANGULAR_CLI_SERVE_HOST_PORT}:4200\" Copy php-fpm entry and rename to php8-fpm Inside php8-fpm entry: #PHP version 8 - LARADOCK_PHP_VERSION=${PHP8_VERSION} … #Does not work with PHP8 - INSTALL_XDEBUG=false … #Does not work with PHP8 - INSTALL_IMAGEMAGICK=false … ports: - \"9004:9003\" … depends_on: - workspace-php-8 Run new container docker-compose up -d workspace-php-8 php8-fpm Waitting for build and up. Access workspace-php-8 and check php version docker-compose exec workspace-php-8 bash #Inside docker container php -v Access php8-fpm and check php version docker-compose exec php8-fpm bash #Inside docker container php -v Configure your site to work with php 8 Inside your site’s nginx configuration file: … fastcgi_pass php8-fpm:9000; …. ","date":"2021-04-18","objectID":"/how_to_use_php8_with_laradock/:0:0","series":null,"tags":["Linux","Docker","Laradock"],"title":"How to use PHP8 with Laradock","uri":"/how_to_use_php8_with_laradock/#"},{"categories":["notes"],"content":"Hello, it is me again. Today, we will talk about “pass by value” or “pass by reference”. I use PHP 7.4 and Ubuntu 20.04 to test. Happy coding! We have an example class: class MyClass { public $x; public $y; public function __construct($x, $y) { $this-\u003ex = $x; $this-\u003ey = $y; } public function setX($x) { $this-\u003ex = $x; } public function setY($y) { $this-\u003ey = $y; } } And two functions: function TestByValueFunc($myClass) { $myClass-\u003esetX(8); $myClass = new MyClass(6, 7); } function TestByRefueFunc(\u0026$myClass) { $myClass-\u003esetX(8); $myClass = new MyClass(6, 7); } Then we can test the output $myClass = new MyClass(4, 5); echo $myClass-\u003ex, ' ', $myClass-\u003ey, PHP_EOL; TestByValueFunc($myClass); echo $myClass-\u003ex, ' ', $myClass-\u003ey, PHP_EOL; TestByRefueFunc($myClass); echo $myClass-\u003ex, ' ', $myClass-\u003ey, PHP_EOL; The result will be: 4 5 8 5 6 7 Could you please explain why the result is like this? ","date":"2021-04-16","objectID":"/php_pass_by_value_pass_by_reference/:0:0","series":null,"tags":["PHP"],"title":"PHP \"pass by value\" VS \"pass by reference\"","uri":"/php_pass_by_value_pass_by_reference/#"},{"categories":["tutorials"],"content":"Hello, today we will learn how to add select language to an ApiAto web app. Have fun! Document: https://docs.apiato.io/features/localization/ Step 1: Add new language to supported language: Edit supported_languages inside file app/Containers/Localization/Configs/localization.php Step 2: Check default language and fall back language inside file config/app.php Step 3: Define a localization string inside file app/Containers/Container]/Resources/Languages/[language name/file name.php Step 4: Get a localization string inside your code (controller, blade…): trans('[container]::[filename].[string_key]') or {{ __('[container]::[filename].[string_key]') }}, @lang('[container]::[filename].[string_key]') … Example: Language file: app/Containers/Store/Resources/Languages/en/messages.php Content: \u003c?php return [ 'welcome' =\u003e 'Welcome to My Store', ]; Then inside your blade view {{ __(‘store::messages.welcome’) }} Step 5: Define a route to set language $router-\u003eget('lang/{locale}', function($locale) { App::setLocale($locale); session()-\u003eput('locale', $locale); return(redirect('/')); }); Step 6: Edit your midleware to get language from session File: app/Containers/Localization/Middlewares/LocalizationMiddleware.php Function: findLanguage ... private function findLanguage($request) { ... if( session()-\u003eget('locale') ) { $language = session()-\u003eget('locale'); } return $language; } System will get language (and overwrite) from: locale from config file, Accept-Language header, locale from session ","date":"2021-03-25","objectID":"/apiato_select_language/:0:0","series":null,"tags":["Laravel","Apiato"],"title":"Apiato select language","uri":"/apiato_select_language/#"},{"categories":["tutorials"],"content":"Check file: app/Http/Kernel.php (or file app/Ship/Kernels/HttpKernel.php if you use Apiato) and uncomment this line: 'web' =\u003e [ // ... \\Illuminate\\Session\\Middleware\\AuthenticateSession::class, // ... ], Logout all other devices: use Illuminate\\Support\\Facades\\Auth; ... Auth::logoutOtherDevices($password); ","date":"2020-11-27","objectID":"/laravel_logout_other_devices/:0:0","series":null,"tags":["Laravel","Apiato"],"title":"Laravel logout other devices","uri":"/laravel_logout_other_devices/#"},{"categories":["tutorials"],"content":"Create role, permission use Spatie\\Permission\\Models\\Role; use Spatie\\Permission\\Models\\Permission; $role = Role::create(['name' =\u003e 'admin']); $permission = Permission::create(['name' =\u003e 'create-articles']); Assign / Sync / Revoke permission to role // Assign $role-\u003egivePermissionTo($permission); // $permission can be string / object / array of strings / array of objects $permission-\u003eassignRole($role); // Sync $role-\u003esyncPermissions($permissions); $permission-\u003esyncRoles($roles); // Revoke $role-\u003erevokePermissionTo($permission); $permission-\u003eremoveRole($role); Check roles permissons $role-\u003ehasPermissionTo($permission); $role-\u003ehasAnyPermission($permissions); $role-\u003ehasAllPermissions($permissions); Authenticatable user with roles / permissions The model: use Illuminate\\Foundation\\Auth\\User as Authenticatable; use Spatie\\Permission\\Traits\\HasRoles; class User extends Authenticatable { use HasRoles; // ... } Assign / Sync / Revoke permission / role to user // Direct permission $user-\u003egivePermissionTo($permission); // $permission: string / multiple strings / array of strings $user-\u003erevokePermissionTo($permission); $user-\u003esyncPermissions($permissions); // $permissions: Array of permissions name // Via role $user-\u003eassignRole($roles); $user-\u003eremoveRole($roles); $user-\u003esyncRoles($roles); Check user permissions / roles // Permissions $user-\u003ehasPermissionTo($permission); $user-\u003ehasAnyPermission($permissions); $user-\u003ehasAllPermissions($permissions); $user-\u003ecan($permission); // Roles $user-\u003ehasRole($roles); $user-\u003ehasAnyRole($roles); $user-\u003ehasAllRoles($roles); Get permission / role $permissionNames = $user-\u003egetPermissionNames(); $permissions = $user-\u003epermissions; $permissions = $user-\u003egetDirectPermissions(); $permissions = $user-\u003egetPermissionsViaRoles(); $permissions = $user-\u003egetAllPermissions(); $roles = $user-\u003egetRoleNames(); Model scope $users = User::role('admin')-\u003eget(); // Will return all users with role admin. role parameter can be: String / Array of strings / Object / Array of objects $users = User::permission('edit-users')-\u003eget(); // Returns only users with the permission 'edit-users' (inherited or directly) Eloquent $all_users_with_all_their_roles = User::with('roles')-\u003eget(); $all_users_with_all_direct_permissions = User::with('permissions')-\u003eget(); $all_roles_in_database = Role::all()-\u003epluck('name'); $users_without_any_roles = User::doesntHave('roles')-\u003eget(); $all_roles_except_a_and_b = Role::whereNotIn('name', ['role A', 'role B'])-\u003eget(); ","date":"2020-11-27","objectID":"/laravel_roles_permissions/:0:0","series":null,"tags":["Laravel","Apiato"],"title":"Laravel Roles Permissions","uri":"/laravel_roles_permissions/#"},{"categories":["tutorials"],"content":"Home page: http://docs.apiato.io/ Create project using composer from latest stable composer create-project apiato/apiato apiato9 Then edit the .env file. Migrate database php artisan migrate Create admin user, some permissions, roles php artisan db:seed Default account is: admin@admin.com / admin. Add all current permissions to admin role. php artisan apiato:permissions:toRole admin Install OAuth 2.0 php artisan passport:install Then edit file .env update CLIENT_WEB_ADMIN_ID, CLIENT_WEB_ADMIN_SECRET with the new created value. Install ApiDocJs yarn install Create api doc php artisan apiato:apidoc Your default document url is: http:///api/documentation and http:///api/private/documentation Default result is saved in: public/api/documentation/ Testing setup Edit file: phpunit.xml, update API_FULL_URL, DB_CONNECTION, DB_DATABASE Run the test vendor/bin/phpunit ","date":"2020-11-26","objectID":"/apiato/:0:0","series":null,"tags":["Laravel","Apiato"],"title":"Apiato laravel based framework","uri":"/apiato/#"},{"categories":["howto"],"content":"Install package using composer: composer require goldspecdigital/laravel-eloquent-uuid:^7.0 Inside migration file. // Replace this $table-\u003eincrements('id'); // By this $table-\u003euuid('id')-\u003eprimary(); Inside model file use GoldSpecDigital\\LaravelEloquentUUID\\Database\\Eloquent\\Uuid; ... class MyModel extends Model { use Uuid; protected $keyType = 'string'; public $incrementing = false; protected $guarded = []; } ","date":"2020-11-02","objectID":"/how_to_use_uuid_as_id_laravel/:0:0","series":null,"tags":["Laravel","UUID"],"title":"Use UUID as primary key of Laravel Eloquent ORM","uri":"/how_to_use_uuid_as_id_laravel/#"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#get-token"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#export-token"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#get-domains"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#get-projects"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#set-storage-policy-quota-for-one-project"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#get-all-projects-vms-with-detail"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#get-all-flavors-with-detail"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#grant-one-role-on-all-domains-projects-to-one-user"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#grant-one-system-role-to-one-user"},{"categories":["notes"],"content":"0.0.0.1 Get token curl -s -i -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"{USERNAME}\", \"domain\": { \"id\": \"{DOMAIN_ID}\" }, \"password\": \"{PASSWORD}\" } } }, \"scope\": { \"project\": { \"id\": \"{PROJECT_ID}\" } } } }' \"https://{BASE URL}:5000/v3/auth/tokens\" | grep \"X-Subject-Token:\" Default keystone port is 5000 By default, this token will be expired after 6 hours. 0.0.0.2 Export tokenAPI_TOKEN=\"{TOKEN}\" 0.0.0.3 Get domains curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/domains\" | jq '.' Use jq command to format return JSON data. 0.0.0.4 Get projects curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE URL}:5000/v3/projects\" | jq '.' 0.0.0.5 Set storage policy quota for one project curl -s -X PUT -H \"Content-Type: application/json\" -H \"X-Auth-Token: $API_TOKEN\" -d ' { \"gigabytes_{POLICY_1_NAME}\": {QUOTA_1_VALUE}, \"gigabytes_{POLICY_2_NAME}\": {QUOTA_2_VALUE}, \"gigabytes_{POLICY_3_NAME}\": {QUOTA_3_VALUE} }' \"https://{BASE_URL}:8776/v3/{ADMIN_PROJECT_ID}/os-quota-sets/{PROJECT_ID}\" 0.0.0.6 Get all project’s vms with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/servers/detail\" | jq '.' 0.0.0.7 Get all flavors with detail curl -s -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:8774/v2.1/flavors/detail\" | jq '.' 0.0.0.8 Grant one role on all domain’s projects to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/OS-INHERIT/domains/{DOMAIN_ID}/users/{USER_ID}/roles/{ROLE_ID}/inherited_to_projects\" | jq '.' 0.0.0.9 Grant one system role to one user curl -s -X PUT -H \"X-Auth-Token: $API_TOKEN\" \"https://{BASE_URL}:5000/v3/system/users/{USER_ID}/roles/{SYSTEM_ROLE_ID}\" | jq '.' 0.0.0.10 Set micro version for APIUsing HTTP header: X-OpenStack-Nova-API-Version: 2.4 Or OpenStack-API-Version: compute 2.27 (valid from version 2.27). ","date":"2020-10-29","objectID":"/working_with_openstack_api_using_curl/:0:0","series":null,"tags":["PHP","OpenStack","API"],"title":"Working with openstack api using curl","uri":"/working_with_openstack_api_using_curl/#set-micro-version-for-api"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-\u003egetClient(); 0.0.0.3 Reading data // fetch the database $database = $client-\u003eselectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-\u003equery('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-\u003egetPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-\u003egetQueryBuilder() -\u003eselect('cpucount') -\u003efrom('test_metric') -\u003elimit(2) -\u003eoffset(2) -\u003egetResultSet() -\u003egetPoints(); // get the query from the QueryBuilder $query = $database-\u003egetQueryBuilder() -\u003eselect('cpucount') -\u003efrom('test_metric') -\u003ewhere([\"region = 'us-west'\"]) -\u003egetQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-\u003egetLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' =\u003e 'tag_value_1', 'tag_key_2' =\u003e 'tag_value_2',], // optional tags ['field_key_1' =\u003e 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' =\u003e 'tag_value_3', 'tag_key_2' =\u003e 'tag_value_4',], // optional tags ['field_key_1' =\u003e 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-\u003ewritePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#install-via-composer"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#create-client-object"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#reading-data"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#use-the-querybuilder-object"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#get-the-last-executed-query-from-the-client"},{"categories":["notes"],"content":"document: https://github.com/influxdata/influxdb-php 0.0.0.1 Install via composer composer require influxdb/influxdb-php 0.0.0.2 Create client object $client = new InfluxDB\\Client($host, $port); // directly get the database object $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname)); // Fetch the database using a 5 second time out $database = InfluxDB\\Client::fromDSN(sprintf('influxdb://user:pass@%s:%s/%s', $host, $port, $dbname), 5); // get the client to retrieve other databases $client = $database-getClient(); 0.0.0.3 Reading data // fetch the database $database = $client-selectDB('influx_test_db'); // executing a query will yield a resultset object $result = $database-query('select * from test_metric LIMIT 5'); // get the points from the resultset yields an array $points = $result-getPoints(); 0.0.0.4 Use the queryBuilder object // retrieve points with the query builder $result = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -limit(2) -offset(2) -getResultSet() -getPoints(); // get the query from the QueryBuilder $query = $database-getQueryBuilder() -select('cpucount') -from('test_metric') -where([\"region = 'us-west'\"]) -getQuery(); 0.0.0.5 Get the last executed query from the client // use the getLastQuery() method $lastQuery = $client-getLastQuery(); // or access the static variable directly: $lastQuery = Client::lastQuery; 0.0.0.6 Writting data // create an array of points $points = array( new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_1', 'tag_key_2' = 'tag_value_2',], // optional tags ['field_key_1' = 'field_value_1',], // optional additional fields 1435255849 // Time precision has to be set to seconds! ), new Point( 'Measurement_Name', // name of the measurement 0.64, // the measurement value ['tag_key_1' = 'tag_value_3', 'tag_key_2' = 'tag_value_4',], // optional tags ['field_key_1' = 'field_value_5',], // optional additional fields 1435256149 // Time precision has to be set to seconds! ) ); // we are writing unix timestamps, which have a second precision $result = $database-writePoints($points, Database::PRECISION_SECONDS); // You can use some other precisions /* PRECISION_NANOSECONDS PRECISION_MICROSECONDS PRECISION_MILLISECONDS PRECISION_SECONDS PRECISION_MINUTES PRECISION_HOURS */ ","date":"2020-10-20","objectID":"/working_with_influxdb_data_using_phpclient/:0:0","series":null,"tags":["InfluxDB"],"title":"Working With Influxdb Data Using PhpClient","uri":"/working_with_influxdb_data_using_phpclient/#writting-data"},{"categories":["notes"],"content":"In this post we will see how to run influxdb docker container using laradock. Have fun. InfluxDB docker document: https://hub.docker.com/_/influxdb Edit laradock .env file: Add these lines at the end of file ### INFLUXDB ################################################## # influxdb version, accept values: 1.7, 1.7.10, 1.8, 1.8.3, latest INFLUXDB_VERSION=1.8 INFLUXDB_HTTP_PORT=8086 Edit docker-composer.yml file. Please remember to backup it first :). Add these lines at the end of file ### influxdb #################################################### influxdb: container_name: influxdb hostname: influxdb image: influxdb:${INFLUXDB_VERSION} ports: - \"${INFLUXDB_HTTP_PORT}:8086\" networks: - backend volumes: - ${DATA_PATH_HOST}/influxdb/var/lib/influxdb:/var/lib/influxdb Start influxdb container docker-composer up -d influxdb Interact with data using influx command line -precision rfc3339 mean format time to human readable. docker-compose exec influxdb influx -precision rfc3339 API URI is: http://localhost:8086 ","date":"2020-10-20","objectID":"/influxdb_docker_with_laradock/:0:0","series":null,"tags":["Docker","Laradock"],"title":"Influxdb Docker With Laradock","uri":"/influxdb_docker_with_laradock/#"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () =\u003e { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( \u003cAdmin dataProvider={dataProvider}\u003e \u003cResource name=\"users\" list={ListGuesser} /\u003e \u003c/Admin\u003e ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set \u003cAdmin dashboard={ Dashboard } …\u003e 0.0.0.1.2 Customizing menu icon Import Icon \u003cResource icon={ ICON } …\u003e 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) \u003cAdmin authProvider={ authProvider } …\u003e 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme =\u003e theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () = { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set 0.0.0.1.2 Customizing menu icon Import Icon 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme = theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#react-admin-tutorial-notes"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () = { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set 0.0.0.1.2 Customizing menu icon Import Icon 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme = theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#add-dashboard-page"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () = { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set 0.0.0.1.2 Customizing menu icon Import Icon 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme = theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#customizing-menu-icon"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () = { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set 0.0.0.1.2 Customizing menu icon Import Icon 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme = theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#adding-login-page"},{"categories":["tutorials"],"content":"0.0.0.1 React-Admin tutorial notesCreate new project and install packages yarn create react-app test-admin cd test-admin/ yarn add react-admin ra-data-json-server prop-types Edit file src/App.js import * as React from \"react\"; import { Admin, Resource } from 'react-admin'; import jsonServerProvider from 'ra-data-json-server'; import { ListGuesser } from 'react-admin'; const App = () = { const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com'); return( ); } export default App; 0.0.0.1.1 Add dashboard page Create dashboard component Set 0.0.0.1.2 Customizing menu icon Import Icon 0.0.0.1.3 Adding login page Create src/Providers/authProvider (Example code: …) 0.0.0.1.4 Check screen size const isSmall = useMediaQuery(theme = theme.breakpoints.down('sm')); ","date":"2020-10-17","objectID":"/react-admin-p1/:0:0","series":null,"tags":["React-Admin","ReactJS"],"title":"React Admin P1","uri":"/react-admin-p1/#check-screen-size"},{"categories":["notes"],"content":"This is some git commands that I usually use. Clone a repository git clone \u003cURL\u003e [\u003cDEST Directory\u003e] Clone from specific branch git clone --branch \u003cBRANCH NAME\u003e \u003cURL\u003e [\u003cDEST Directory\u003e] Pull code from remote master branch and merge to current banch git pull origin master Push code from local DEV branch to remote MASTER branch git push origin dev:master Create local branch git checkout -b \u003cBRANCH NAME\u003e Switch local branch git checkout \u003cBRANCH NAME\u003e List all branch git branch -a Delete local branch git branch -d \u003cBRANCH NAME\u003e Delete remote branch git push origin --delete \u003cBRANCH NAME\u003e View files status git status Add files to commit . mean all changed files. git add . Rename a branch git branch -m \"new-branch-name\" git branch -m \"old-branch-name\" \"new-branch-name\" (updating ….) ","date":"2020-10-16","objectID":"/some_git_commands/:0:0","series":null,"tags":["Git"],"title":"Some git commands","uri":"/some_git_commands/#"},{"categories":["howto"],"content":"Hello, sometimes you need to know what is my IP. In this post we will learn one way to check public IP. Have fun! Open your browser to access this link: https://api.myip.com/. You can see something like this: {“ip”:“115.75.212.27”,“country”:“Viet Nam”,“cc”:“VN”} so your IP is: 115.75.212.27. Bonus: You can use curl command to get data too. ","date":"2020-10-16","objectID":"/how_to_check_my_ip/:0:0","series":null,"tags":null,"title":"How to check my ip","uri":"/how_to_check_my_ip/#"},{"categories":["notes"],"content":" /** This is a single line DocComment. */ /** * This is a multi-line DocComment. */ /** * This is a summary * * This is a description */ /** * This is a summary. * This is a description */ Tags example: @api, @author, @param, @return… \u003c?php /** * I belong to a file. File summary * * File description. */ /** * I belong to a class. Class summary * * Class description * @author ... */ class MyClass { /** * I belong to a property. Property summary. * Property description */ public $myProperty; /** * I belong to a method. Method summary. * Method description * * @author ... * @param string $param1 ... * @param string $param2 ... * @return string ... */ public function myFunction($param1, $param2) { return('result'); } } Classes and interfaces - Summary - Description - The following tags: - author - copyright - package - subpackage - version Properties - Summary - Description - The following tags: - author - copyright - version - var Methods - Summary - Description - The following tags: - author - copyright - version - param - return - throws","date":"2020-10-15","objectID":"/phpdoc_docblock/:0:0","series":null,"tags":["PHP","PHPDocs"],"title":"Phpdoc docblock","uri":"/phpdoc_docblock/#"},{"categories":["notes"],"content":"Hello. In this post, we will learn how to build document using phpdoc. Have fun! Install phpdoc Using composer composer require \"phpdocumentor/phpdocumentor:2.*\" Then run command vendor/bin/phpdoc ... Manual: Download file phar from: Github releases Then run command php phpDocumentor.phar ... Some simple commands vendor/bin/phpdoc template:list vendor/bin/phpdoc run -d SRC -t DEST --template=TEMPLATE_NAME … ","date":"2020-10-15","objectID":"/create_document_using_phpdoc/:0:0","series":null,"tags":["PHP","PHPDocs"],"title":"Create document using phpdoc","uri":"/create_document_using_phpdoc/#"},{"categories":["howto"],"content":"Hello, today we will to learn 2 of many ways to install and use VIM plugins. I use Ubuntu 20.04 to test. Have fun! If you want to install plugin named nerdtree, 1st way: Copy plugin files to: ~/.vim/pack/vendor/start and they will be load when you launch VIM Example: cp -r nerdtree ~/.vim/pack/vendor/start/ Then inside VIM, you can use command: :NERDTree 2nd way: Copy plugin files to: ~/.vim/pack/vendor/opt and they will be not load until you use command packadd to load it. Example: cp -r nerdtree ~/.vim/pack/vendor/opt/ Then inside VIM, you can use command: packadd nerdtree to load the plugin. Then you can use command :NERDTree ","date":"2020-10-14","objectID":"/how_to_install_vim_plugins/:0:0","series":null,"tags":["VIM"],"title":"How to install VIM plugins","uri":"/how_to_install_vim_plugins/#"},{"categories":["howto"],"content":"Hello, today I’ve installed new Ubuntu 20.04. Then I get the wifi problem. When system start, the wifi works fine. But a few moment later, it was dropped so I cannot connect to the internet. I disable wifi, then enable wifi, it works fine for some minutes and fall into problem again. I see this link and try to edit file /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf change wifi.powersave from 3 (enable power save) to 2 (disable power save). And reboot. Now the wifi works fine. ","date":"2020-10-11","objectID":"/how_to_disable_wifi_power_save_ubuntu_20.04/:0:0","series":null,"tags":["Ubuntu"],"title":"How to disable wifi power save Ubuntu 20.04","uri":"/how_to_disable_wifi_power_save_ubuntu_20.04/#"},{"categories":["Howto"],"content":"How to create a linux service","date":"2020-10-10","objectID":"/how_to_create_linux_service/","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/"},{"categories":["Howto"],"content":"Hi, today we will learn how to create a linux service. I use Ubuntu 20.04 to test. Have fun! ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:0:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#"},{"categories":["Howto"],"content":"1 Create new service file /etc/systemd/system/test_service.service Example file content: [Unit] Description=Demo test service After=network.target StartLimitIntervalSec=0 [Service] Type=simple Restart=always RestartSec=1 User=**root** ExecStart=**COMMAND TO EXECUTE** [Install] WantedBy=multi-user.target You can see the full service defination here: Will be update ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:1:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#create-new-service-file"},{"categories":["Howto"],"content":"2 Start service sudo systemctl daemon-reload sudo systemctl start test_service.service ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:2:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#start-service"},{"categories":["Howto"],"content":"3 Enable service (so service will start with OS) sudo systemctl enable test_service.service ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:3:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#enable-service-so-service-will-start-with-os"},{"categories":["Howto"],"content":"4 Check service status sudo systemctl status test_service.service ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:4:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#check-service-status"},{"categories":["Howto"],"content":"5 Stop service sudo systemctl stop test_service.service ","date":"2020-10-10","objectID":"/how_to_create_linux_service/:5:0","series":[],"tags":["Linux","Service"],"title":"How to create a linux service","uri":"/how_to_create_linux_service/#stop-service"},{"categories":["howto"],"content":"In this post, we will learn how to parse json data in GoLang. Have fun! Working with structed data // Import package import ( \"encoding/json\" ) type Bird struct { Species string Description string } func main() { jsonString := `{ \"species\": \"pigeon\", \"description\": \"likes to perch on rocks likes to perch on rocks likes to perch on rocks\" }` var bird Bird err := json.Unmarshal([]byte(jsonString), \u0026bird) if err != nill { // json string is invalid. } ... } Custom attributes name ... type Bird struct { Species string `json:\"birdType\"` Description string `json:\"what it does\"` } func main() { jsonString := `{ \"birdType\": \"pigeon\", \"what it does\": \"likes to perch on rocks\" }` var bird Bird err := json.Unmarshal([]byte(birdJson), \u0026bird) ... } Working with JSON arrays data func main() { ... jsonString := `[ { \"species\":\"pigeon\", \"decription\":\"likes to perch on rocks\" }, { \"species\":\"eagle\", \"description\":\"bird of prey\" } ]` var birds []Bird err := json.Unmarshal([]byte(jsonString), \u0026birds) ... } Working with JSON embedded objects ... type Dimensions struct { Height int Width int } ... type Bird struct { Species string Description string Dimensions Dimensions } func main() { ... jsonString := `{ \"species\": \"pigeon\", \"decription\": \"likes to perch on rocks\" \"dimensions\": { \"height\": 24, \"width\": 10 } }` var birds Bird err := json.Unmarshal([]byte(jsonString), \u0026birds) ... } Working with primitives Please remember that, primitives are valid JSON string too… func main() { ... numberJson := \"3\" floatJson := \"3.1412\" stringJson := `\"bird\"` var n int var pi float64 var str string err := json.Unmarshal([]byte(numberJson), \u0026n) err = json.Unmarshal([]byte(floatJson), \u0026pi) err = json.Unmarshal([]byte(stringJson), \u0026str) ... } Working with unstructed data ... func main() { jsonString := `{ \"birds\": { \"pigeon\":\"likes to perch on rocks\", \"eagle\":\"bird of prey\" }, \"animals\": \"none\" }` var result map[string]interface{} err := json.Unmarshal([]byte(birdJson), \u0026result) ... birds := result[\"birds\"].(map[string]interface{}) ... } Encoding JSON data from GO data Struct data to JSON ... type Bird struct { Species string `json:\"birdType\"` Description string `json:\"what it does\"` } func main() { pigeon := \u0026Bird{ Species: \"Pigeon\", Description: \"likes to eat seed\", } data, err := json.Marshal(pigeon) if err == nil { fmt.Println(string(data)) } else { // Encode error } } Ignoring empty field type Bird struct { Species string `json:\"birdType\"` Description string `json:\"what it does,omitempty\"` } SRC: https://www.sohamkamani.com/blog/2017/10/18/parsing-json-in-golang/ ","date":"2020-10-08","objectID":"/working_with_json_in_golang/:0:0","series":null,"tags":["Golang","JSON"],"title":"How to working with JSON in GoLang","uri":"/working_with_json_in_golang/#"},{"categories":["howto"],"content":"Hello, in this post will learn how to build a free personal blog using Hugo + Github page. Have fun! Step 1: Install hugo. Download hugo from: https://github.com/gohugoio/hugo/releases Install in your PC. Step 2: Create a new site. Quick start document: https://gohugo.io/getting-started/ Command: hugo new site myblog Step 3: Setup your hugo theme. Find a theme from: https://themes.gohugo.io/. Download theme and put into site’s themes directory. Example we want to use Ananke theme: cd myblog git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke Inside file config.toml. theme = \"ananke\" Step 4: Create new post. hugo new \u003cPOST TYPE\u003e/\u003cPOST_TITLE.md\u003e Then edit the new file. Step 5: Test your site in your PC and build site. Start hugo server hugo server Default port is 1313 so you can access http://localhost:1313 or http://[YOUR IP]:1313 Build site hugo Result is saved in folder public. Step 6: Register a new Git Hub Account. Step 7: Create a new public repository. Step 8: Inside repository setting, enable github pages. Step 9: Upload folder public to repository Step 10: Check your online site. Bonus: Create cname record for your custom domain to github page domain. Update setting, use custom domain. Wait for a moment (sometimes to 24 hours) and check Enforce HTTPS ","date":"2020-10-08","objectID":"/how_to_build_free_blog/:0:0","series":null,"tags":["Hugo","GitHub"],"title":"How to build a free blog","uri":"/how_to_build_free_blog/#"},{"categories":["Knowlege"],"content":"This post will explain how does computer networking work. Have fun! ","date":"2020-10-08","objectID":"/how_does_networking_work/:0:0","series":[],"tags":["Network"],"title":"How does computer networking work?","uri":"/how_does_networking_work/#"},{"categories":null,"content":"Hugo is the world’s fastest framework for building websites. It is written in Go. It makes use of a variety of open source projects including: https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Learn more and contribute on GitHub. ","date":"2020-10-08","objectID":"/about/:0:0","series":null,"tags":null,"title":"About Hugo","uri":"/about/#"},{"categories":null,"content":"You are not connected to the Internet, only cached pages will be available. ","date":"0001-01-01","objectID":"/offline/:0:0","series":null,"tags":null,"title":"Offline","uri":"/offline/#"}]